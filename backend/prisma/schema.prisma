// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(cuid())
  email              String   @unique
  password           String
  googleId           String?  @unique
  name               String?
  postgresCredentials Json?
  indexingConfigs    IndexingConfig[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model IndexingConfig {
  id                 String   @id @default(cuid())
  userId             String
  user               User     @relation(fields: [userId], references: [id])
  
  // Indexing categories
  indexNFTBids       Boolean  @default(false)
  indexNFTPrices     Boolean  @default(false)
  indexBorrowTokens  Boolean  @default(false)
  indexTokenPrices   Boolean  @default(false)
  
  // Specific configuration details
  targetNFTCollections String[]
  targetTokens         String[]
  
  // Helius webhook configuration
  webhookId          String?
  webhookUrl         String?
  
  status             IndexingStatus @default(PENDING)
  lastSyncedAt       DateTime?
  TokenPrice         TokenPrice[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model TokenPrice {
  id                 String   @id @default(cuid())
  tokenAddress       String
  price              Decimal
  indexingConfigId   String
  indexingConfig     IndexingConfig @relation(fields: [indexingConfigId], references: [id])
  createdAt          DateTime @default(now())
}

enum IndexingStatus {
  PENDING
  ACTIVE
  PAUSED
  ERROR
}

enum AuthType {
  Google
  Github
}